-- Roblox Lua Script for "The Intruder - Mineshaft" Map (By BMF)
-- LocalScript handles UI, cheats, ESPs, and utility buttons

--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local StarterGui = game:GetService("StarterGui")
local UIS = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Camera = workspace.CurrentCamera

--// UI Setup (Hospital-style)
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local ErrorLog = Instance.new("TextLabel")
local ButtonContainer = Instance.new("Frame")
local UIListLayout = Instance.new("UIListLayout")

ScreenGui.Parent = PlayerGui
ScreenGui.ResetOnSpawn = false
ScreenGui.Name = "IntruderMineshaftUI"

MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.Size = UDim2.new(0, 300, 0, 450) -- fixed visible size
MainFrame.Position = UDim2.new(0.5, 301, 0.5, -549)
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Visible = true

Title.Parent = MainFrame
Title.Text = "The Intruder - Mineshaft (By BMF)"
Title.Size = UDim2.new(1, 0, 0, 30)
Title.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 18

ErrorLog.Parent = MainFrame
ErrorLog.Text = "Error Log: None"
ErrorLog.Size = UDim2.new(1, 0, 0, 30)
ErrorLog.Position = UDim2.new(0, 0, 0, 35)
ErrorLog.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
ErrorLog.TextColor3 = Color3.fromRGB(255, 85, 85)
ErrorLog.Font = Enum.Font.SourceSans
ErrorLog.TextSize = 14
ErrorLog.TextWrapped = true
ErrorLog.TextYAlignment = Enum.TextYAlignment.Top

-- ButtonContainer 
local ButtonContainer = Instance.new("Frame")
ButtonContainer.Parent = MainFrame
ButtonContainer.Size = UDim2.new(1, 0, 0, 0) -- height will auto-update
ButtonContainer.Position = UDim2.new(0, 0, 0, 70)
ButtonContainer.BackgroundTransparency = 1

-- UIListLayout inside ButtonContainer
local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Parent = ButtonContainer
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 5)
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left

-- Adjust frame size automatically based on buttons
UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    ButtonContainer.Size = UDim2.new(1, 0, 0, UIListLayout.AbsoluteContentSize.Y)
    MainFrame.Size = UDim2.new(0, 300, 0, 70 + UIListLayout.AbsoluteContentSize.Y + 10) -- 10px padding at bottom
end)

--// Toggle UI
UIS.InputBegan:Connect(function(input, processed)
	if not processed and input.KeyCode == Enum.KeyCode.Delete then
		MainFrame.Visible = not MainFrame.Visible
	end
end)

-- Button creator function
local function createButton(name, callback)
    local Button = Instance.new("TextButton")
    Button.Parent = ButtonContainer
    Button.Size = UDim2.new(1, -10, 0, 30) -- full width minus padding
    Button.Position = UDim2.new(0, 5, 0, 0) -- 5px left padding
    Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    Button.TextColor3 = Color3.fromRGB(255, 255, 255)
    Button.Font = Enum.Font.SourceSans
    Button.TextSize = 16
    Button.Text = name
    Button.MouseButton1Click:Connect(function()
        pcall(callback)
    end)
    return Button
end

--// ESP Helpers
local function highlightTarget(target, color)
	if target:FindFirstChildOfClass("Highlight") then return end
	local highlight = Instance.new("Highlight")
	highlight.Adornee = target
	highlight.FillColor = color
	highlight.FillTransparency = 0.5
	highlight.OutlineColor = Color3.fromRGB(255,255,255)
	highlight.OutlineTransparency = 0
	highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
	highlight.Parent = target
end

local function createTracer(target, color)
	local line = Drawing.new("Line")
	line.Visible = true
	line.Color = color
	line.Thickness = 2
	local connection
	connection = RunService.RenderStepped:Connect(function()
		if target and target:FindFirstChild("HumanoidRootPart") and target:FindFirstChildOfClass("Humanoid") then
			local hrp = target:FindFirstChild("HumanoidRootPart")
			local pos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
			if onScreen then
				line.From = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y)
				line.To = Vector2.new(pos.X, pos.Y)
				line.Visible = true
			else
				line.Visible = false
			end
		else
			line.Visible = false
			connection:Disconnect()
			line:Remove()
		end
	end)
end

local function createNameTag(target, text, color)
	if target:FindFirstChild("NameTag") then return end
	local billboard = Instance.new("BillboardGui")
	billboard.Name = "NameTag"
	billboard.Size = UDim2.new(0,200,0,50)
	billboard.StudsOffset = Vector3.new(0,3,0)
	billboard.AlwaysOnTop = true
	billboard.MaxDistance = 500
	billboard.Parent = target

	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1,0,1,0)
	label.BackgroundTransparency = 1
	label.Text = text
	label.TextColor3 = color
	label.TextStrokeTransparency = 0
	label.TextScaled = true
	label.Font = Enum.Font.SourceSansBold
	label.Parent = billboard
end

--// Buttons

-- Infinite Yield
createButton("Infinite Yield", function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)

-- Dark Dex
createButton("Dark Dex", function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
end)

-- Win Game (WIP)
createButton("Win Game (WIP)", function()
	print("Win Game feature coming soon!")
end)

-- God Mode (WIP)
createButton("God Mode (WIP)", function()
	print("God Mode feature coming soon!")
end)

createButton("Block Generators", function()
    -- Helper function to create a wall between two positions
    local function createWall(startCFrame, endCFrame)
        local startPos = startCFrame.Position
        local endPos = endCFrame.Position
        
        local wall = Instance.new("Part")
        wall.Anchored = true
        wall.CanCollide = true
        wall.BrickColor = BrickColor.new("Really red")
        wall.Transparency = 0.5 -- change to 0 for fully visible
        wall.Parent = workspace

        -- Compute size and position
        local size = Vector3.new(
            math.abs(endPos.X - startPos.X) ~= 0 and math.abs(endPos.X - startPos.X) or 1,
            10, -- tall enough to block completely
            math.abs(endPos.Z - startPos.Z) ~= 0 and math.abs(endPos.Z - startPos.Z) or 1
        )
        wall.Size = size
        
        -- Compute middle position
        local midPos = (startPos + endPos) / 2
        wall.CFrame = CFrame.new(midPos)
    end

    -- Generator 3 wall
    createWall(
        CFrame.new(111.225021, 5.7249999, 35.350029),
        CFrame.new(111.225021, 5.7249999, 29.2500458)
    )

    -- Generator 4 wall
    createWall(
        CFrame.new(56.8750191, 5.7249999, 57.2000465),
        CFrame.new(56.8750191, 5.7249999, 63.7000313)
    )

    -- Generator 5 wall
    createWall(
        CFrame.new(151.250015, 5.7249999, 49.0750427),
        CFrame.new(157.350006, 5.7249999, 49.0750427)
    )
end)

-- Infinite Stamina (WIP)
createButton("Infinite Stamina (WIP)", function()
	local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local Humanoid = Character:WaitForChild("Humanoid")

	local function safeDestroy(obj)
		if obj and obj.Destroy then
			pcall(function() obj:Destroy() end)
		end
	end

	safeDestroy(LocalPlayer:FindFirstChild("PlayerGui") and LocalPlayer.PlayerGui:FindFirstChild("Stamina") and LocalPlayer.PlayerGui.Stamina:FindFirstChild("StaminaDisplay") and LocalPlayer.PlayerGui.Stamina.StaminaDisplay:FindFirstChild("Regen"))
	safeDestroy(StarterGui:FindFirstChild("Stamina") and StarterGui.Stamina:FindFirstChild("StaminaDisplay") and StarterGui.Stamina.StaminaDisplay:FindFirstChild("Regen"))

	local staminaGui = StarterGui:FindFirstChild("Stamina")
	if staminaGui then
		local display = staminaGui:FindFirstChild("StaminaDisplay")
		if display then
			local current = display:FindFirstChild("Current")
			local active = display:FindFirstChild("Active")
			if current and active then
				spawn(function()
					while true do
						pcall(function()
							current.Value = 100
							active.Value = false
						end)
						wait(0.1)
					end
				end)
			else
				ErrorLog.Text = "Error Log: Current or Active value not found."
			end
		else
			ErrorLog.Text = "Error Log: StaminaDisplay not found."
		end
	else
		ErrorLog.Text = "Error Log: Stamina GUI not found."
	end

	-- Shift speed
	local shiftHeld = false
	UIS.InputBegan:Connect(function(input, gp)
		if gp then return end
		if input.KeyCode == Enum.KeyCode.LeftShift then
			shiftHeld = true
			Humanoid.WalkSpeed = 16
		end
	end)
	UIS.InputEnded:Connect(function(input)
		if input.KeyCode == Enum.KeyCode.LeftShift then
			shiftHeld = false
			Humanoid.WalkSpeed = 8
		end
	end)
end)

-- Teleport Helper
local function tpTo(pos)
	if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
	end
end

-- TP Buttons
createButton("TP to Gen 1", function() tpTo(Vector3.new(49, 4, -87)) end)
createButton("TP to Gen 2", function() tpTo(Vector3.new(131, 4, -88)) end)
createButton("TP to Gen 3", function() tpTo(Vector3.new(127, 4, 32)) end)
createButton("TP to Gen 4", function() tpTo(Vector3.new(29, 4, 60)) end)
createButton("TP to Gen 5", function() tpTo(Vector3.new(154, 4, 60)) end)

-- Full Bright
createButton("Full Bright", function()
	Lighting.Brightness = 5
	Lighting.ClockTime = 14
	Lighting.FogEnd = 100000
	Lighting.GlobalShadows = false
	Lighting.OutdoorAmbient = Color3.new(1,1,1)
end)

-- Never Fail Generators
createButton("Never Fail Generators", function()
	local plr = LocalPlayer
	local function safeDestroy(obj)
		if obj and obj.Destroy then obj:Destroy() end
	end
	safeDestroy(plr:FindFirstChild("PlayerGui") and plr.PlayerGui:FindFirstChild("Puzzle"))
	safeDestroy(plr:FindFirstChild("Backpack") and plr.Backpack:FindFirstChild("Explode"))
	safeDestroy(StarterGui:FindFirstChild("Puzzle"))
	safeDestroy(game:GetService("StarterPack"):FindFirstChild("Explode"))
end)

-- Intruder ESP
createButton("Intruder ESP", function()
	local intruder = workspace:WaitForChild("Intruder")
	if intruder and intruder:IsA("Model") then
		highlightTarget(intruder, Color3.fromRGB(255,0,0))
		createTracer(intruder, Color3.fromRGB(255,0,0))
		createNameTag(intruder, "Intruder", Color3.fromRGB(255,0,0))
	end
end)

-- Generator ESP (with proper tracers and labels)
createButton("Generator ESP", function()
    local gensFolder = workspace:WaitForChild("Generators")
    
    for _, gen in pairs(gensFolder:GetChildren()) do
        local mainPart = nil
        if gen:IsA("Model") then
            mainPart = gen.PrimaryPart or gen:FindFirstChildWhichIsA("BasePart")
        elseif gen:IsA("BasePart") then
            mainPart = gen
        end

        if mainPart then
            -- Highlight
            highlightTarget(gen, Color3.fromRGB(255,255,0))

            -- Tracer
            local line = Drawing.new("Line")
            line.Visible = true
            line.Color = Color3.fromRGB(255,255,0)
            line.Thickness = 2
            local conn
            conn = RunService.RenderStepped:Connect(function()
                if mainPart then
                    local pos, onScreen = Camera:WorldToViewportPoint(mainPart.Position)
                    if onScreen then
                        line.From = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y)
                        line.To = Vector2.new(pos.X, pos.Y)
                        line.Visible = true
                    else
                        line.Visible = false
                    end
                else
                    line.Visible = false
                    conn:Disconnect()
                    line:Remove()
                end
            end)

            -- BillboardGui
            if not gen:FindFirstChild("NameTag") then
                local gui = Instance.new("BillboardGui")
                gui.Name = "NameTag"
                gui.Size = UDim2.new(0,200,0,90) -- 3 labels
                gui.StudsOffset = Vector3.new(0,4,0)
                gui.AlwaysOnTop = true
                gui.MaxDistance = 500
                gui.Parent = gen

                -- Generator Name Label
                local nameLabel = Instance.new("TextLabel")
                nameLabel.Size = UDim2.new(1,0,0.33,0)
                nameLabel.BackgroundTransparency = 1
                nameLabel.TextColor3 = Color3.fromRGB(255,255,0)
                nameLabel.TextStrokeTransparency = 0.2
                nameLabel.Font = Enum.Font.SourceSansBold
                nameLabel.TextScaled = true
                nameLabel.Text = gen.Name -- Generator name (1-5)
                nameLabel.Parent = gui

                -- Health Label
                local healthLabel = Instance.new("TextLabel")
                healthLabel.Position = UDim2.new(0,0,0.33,0)
                healthLabel.Size = UDim2.new(1,0,0.33,0)
                healthLabel.BackgroundTransparency = 1
                healthLabel.TextColor3 = Color3.fromRGB(255,255,0)
                healthLabel.TextStrokeTransparency = 0.2
                healthLabel.Font = Enum.Font.SourceSansBold
                healthLabel.TextScaled = true
                healthLabel.Parent = gui

                -- Using Label
                local usingLabel = Instance.new("TextLabel")
                usingLabel.Position = UDim2.new(0,0,0.66,0)
                usingLabel.Size = UDim2.new(1,0,0.33,0)
                usingLabel.BackgroundTransparency = 1
                usingLabel.TextColor3 = Color3.fromRGB(255,255,0)
                usingLabel.TextStrokeTransparency = 0.2
                usingLabel.Font = Enum.Font.SourceSansBold
                usingLabel.TextScaled = true
                usingLabel.Parent = gui

                local health = gen:WaitForChild("health")
                local inUse = gen:WaitForChild("inUse")
                local plrUsing = gen:WaitForChild("plrUsing")

                -- Update Labels
                RunService.RenderStepped:Connect(function()
                    pcall(function()
                        healthLabel.Text = "Health: "..tostring(health.Value)
                        if inUse.Value == true then
                            usingLabel.Text = "Being used by "..tostring(plrUsing.Value)
                        else
                            usingLabel.Text = ""
                        end
                    end)
                end)
            end
        end
    end
end)

-- Kill the Intruder
createButton("Kill the Intruder", function()
	local intruder = workspace:FindFirstChild("Intruder")
	if intruder then intruder:Destroy() end
end)

-- Return to Lift
createButton("Return to Lift", function()
	tpTo(Vector3.new(28,4,-39))
end)

print("The Intruder - Mineshaft Script Loaded Successfully")
